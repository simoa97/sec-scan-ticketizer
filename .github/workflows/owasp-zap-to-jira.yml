name: OWASP ZAP to Jira - Manual workflow

on:
  workflow_dispatch:

jobs:
  workflow:
    name: example workflow - OWASP ZAP
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Pull OWASP ZAP 
      run: docker pull ghcr.io/zaproxy/zaproxy:stable

    - name: get name of image
      run: docker images
        
    - name: Install python
      uses: actions/setup-python@v5

# following parts of the workflow are just for example purpose. You can scan a url api definition that is published on the internet.
    - name: Build docker image to be scanned
      run: docker build ${{ github.workspace }}/app -t flask-openapi
    
    - name: Run App docker image
      run: docker run -d -p 5000:5000 flask-openapi

# If running the image locally, you must specify --network host, allowing container access the host network
    - name: Scan the image
      run: docker run --network host ghcr.io/zaproxy/zaproxy zap-api-scan.py -t http://172.17.0.2:5000/api/docs/#/ -f openapi | tee flaskresult

    - name: Publish result to JIRA
      run: python ${{ github.workspace }}/scripts/owasp-ticketizer.py flaskresult ${{ secrets.JIRA }} flask-app # alpine can be exchanged for repository name variable - ${{ github.event.repository.name }}